## Velocity template for generating a schema.org-like view of an ontology.

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- ======================================== -->
<!-- =     GENERATED FILE! DO NOT EDIT!     = -->
<!-- ======================================== -->
<!-- page style is modeled off of the http://schema.org/docs/full.html taxonomy view -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
	<title>Full Vocabulary View</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<meta name="description" content="" />
	<meta name="keywords" content="" />
	<meta name="robots" content="" />
	##this template will always be used at the root directory of the servlet.
	<link rel="stylesheet" type="text/css" href="../css/default.css" media="all"/>
	<link rel="stylesheet" type="text/css" href="../css/schema.css" media="all"/>
</head>
<body>

<div id="header"><h1>Security Automation Controlled Vocabularies / Schemas</h1></div>


	<div id="content" class="col1">


    	<table class=h>
    		<tr>
    			<td class="tc" colspan=4><a href="">Thing</a></td>
    		</tr>
    							#macro ( recurseChildren $e )     
    								#if( $e.getSubClasses().size() > 0 )
    									#foreach ($child in $e.getSubClasses() )
    										<tr>
    											<td class="space"></td>
    											<td class="bar"></td>
    											<td class="space"></td>
    											<td>
    												<table class=h>
    													<tr>
    														#set( $path = $pathBuilder.buildPath("$child.getLabel()") )
    														<td class="tc" colspan=4><a href="${path}">${child.getLabel()}</a>: ${child.getDescritpion()}</td>
    													</tr>
    													#recurseChildren( $child ) 
                                                    </table>
                                                </td>
                                            </tr>
    										
    									#end
    
    								#end
    							#end
    							## start the recursion
    							#recurseChildren(${root})

    	</table>
	</div>
		
	
</body>
</html>
